package com.gvs.controladores;

import java.util.Collection;
import java.util.Vector;

import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import com.gvs.entidades.CierresDeDia;
import com.gvs.exceptiones.ExceptionCierreDeDia;
import com.gvs.utilidades.BaseDeDatos;
import com.gvs.utilidades.Funciones;


public class ControladorCierreDeDia {
	private Context conte ;
	private Funciones funcion = new Funciones();
	
	public ControladorCierreDeDia(Context cont) {
		conte = cont;
	}
	
	public boolean marcarParaEnviar() throws ExceptionCierreDeDia {
		try {
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql=""; 
			Sql = "UPDATE FINESDEDIA SET ESTADO=11 WHERE ESTADO=0";
			db.execSQL(Sql);
			return true;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new ExceptionCierreDeDia("ERROR:Al intentar marcar fines de d√≠a para ser enviados. " +
					"Pongase en contacto con la mesa de ayuda. Error: " + e.getMessage());
		}
	}
	
	public Collection<CierresDeDia> buscarNoAtendidosParaEnviar() throws ExceptionCierreDeDia{
		try {
			Vector<CierresDeDia> cierres = new Vector<CierresDeDia>();
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql = "SELECT * FROM FINESDEDIA WHERE ESTADO=11";
			Cursor cur = db.rawQuery(Sql, null);
			if (cur.getColumnCount()>0){
				while (cur.moveToNext()){
					CierresDeDia cierre = new CierresDeDia();
					cierre.setCodigoVendedor(cur.getInt(cur.getColumnIndex("CODIGOVENDEDOR")));
					cierre.setFecha(cur.getLong(cur.getColumnIndex("FECHA")));
					cierre.setClientesDelDia(cur.getInt(cur.getColumnIndex("CLIENTESDELDIA")));
					cierre.setClientesAtendidos(cur.getInt(cur.getColumnIndex("CLIENTESATENDIDOS")));
					cierre.setClientesNoAtendidos(cur.getInt(cur.getColumnIndex("CLIENTESNOATENDIDOS")));
					cierre.setPedidosSinEnviar(cur.getInt(cur.getColumnIndex("PEDIDOSSINENVIAR")));
					cierre.setMotivosSinEnviar(cur.getInt(cur.getColumnIndex("MOTIVOSSINENVIAR")));
					cierre.setCobGeneral(cur.getDouble(cur.getColumnIndex("COBGENERAL")));
					cierre.setCobEfectiva(cur.getDouble(cur.getColumnIndex("COBEFECTIVA")));
					cierre.setEstado(cur.getInt(cur.getColumnIndex("ESTADO")));
					cierres.add(cierre);
				}
			}
			return cierres;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new ExceptionCierreDeDia(e.getMessage());
		}
		
	}
}
