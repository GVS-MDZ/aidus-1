package com.gvs.idusapp;

import com.gvs.busquedas.BusquedaConfiguracion;
import com.gvs.busquedas.BusquedaUsuario;
import com.gvs.entidades.Configuracion;
import com.gvs.utilidades.Funciones;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

public class WorkDayActivity extends Activity {
	String[] list = { "LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES","SABADO", "SIN DIA ASIGNADO" };
	private ListView listView;
	private int vendedor;
	private Funciones funcion;
	private BusquedaUsuario controladorUsuario;
	private Bundle bun;
	private BusquedaConfiguracion busquedaConfiguracion;
	private Configuracion configuracion;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_work_day);
		listView = (ListView) findViewById(R.id.lista_dias);
		bun = getIntent().getExtras();
		vendedor = bun.getInt("VENDEDOR");
		funcion = new Funciones();
		controladorUsuario = new BusquedaUsuario();
		busquedaConfiguracion=new BusquedaConfiguracion(this); 
		configuracion = busquedaConfiguracion.buscarConfiguracion();
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,R.layout.row_work_day, R.id.lbl_item_day, list);
		listView.setAdapter(adapter);
		realizarOperacion();
	}
	
	@Override
	protected void onRestart() {
		configuracion = busquedaConfiguracion.buscarConfiguracion();
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,R.layout.row_work_day, R.id.lbl_item_day, list);
		listView.setAdapter(adapter);
		realizarOperacion();
		super.onRestart();
	}
	
	private void realizarOperacion(){
		listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,int position, long id) {
					try{
						switch (position) {
							case 0:			
								bun.putInt("DIA", 1);
								bun.putInt("VENDEDOR",vendedor);
								break;
							case 1:	
								bun.putInt("DIA", 2);
								bun.putInt("VENDEDOR",vendedor);
								break;
							case 2:	
								bun.putInt("DIA", 3);
								bun.putInt("VENDEDOR",vendedor);
								break;
							case 3:	
								bun.putInt("DIA", 4);
								bun.putInt("VENDEDOR",vendedor);
								break;
							case 4:	
								bun.putInt("DIA", 5);
								bun.putInt("VENDEDOR",vendedor);
								break;
							case 5:	
								bun.putInt("DIA", 6);
								bun.putInt("VENDEDOR",vendedor);
								break;
							case 6:	
								bun.putInt("DIA", 0);
								bun.putInt("VENDEDOR",vendedor);
								break;
							default:
								break;
						}
						
						boolean pasa=false;
						if (configuracion.getOtroDia()==1){
							pasa=true;
						} else {
							if (funcion.optenerNumeroDiaActual()==bun.getInt("DIA")){
								pasa=true;
							} 
						}
						
						if (pasa) {
							Intent intent = new Intent(WorkDayActivity.this, TabGeneralActivity.class);
							intent.putExtras(bun);
							startActivity(intent);
						}		
				}catch(Exception ex){
					Toast toast =Toast.makeText(getApplicationContext(),"Bug en el dia seleccionado", Toast.LENGTH_SHORT);
					toast.show();
				}	
			}
		});
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event)  {
		try{	
	        if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {
	        		AlertDialog.Builder alertbox = new AlertDialog.Builder(this);
	        		alertbox.setTitle("Advertencia");
	        		alertbox.setMessage("Â¿Desea salir?");
	        		alertbox.setPositiveButton("Aceptar", new DialogInterface.OnClickListener() {
	        			public void onClick(DialogInterface arg0, int arg1) {
	        				onBackPressed();
	        			}
	        		});
	        		alertbox.setNegativeButton("Cancelar", new DialogInterface.OnClickListener() {
	        			public void onClick(DialogInterface arg0, int arg1) {
	        			
	        			}
	        		});
	        		alertbox.show();    	        	
	            return true;
	        }
		}catch(Exception ex){
			Toast toast =Toast.makeText(this,"Bug no puede validar el regreso", Toast.LENGTH_SHORT);
			toast.show();
		}
        return super.onKeyDown(keyCode, event);
    }
    
	@Override
	public void onBackPressed() {
    	super.onBackPressed();
  
	}
	
	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.work_day, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		int id = item.getItemId();
		if (id == R.id.ventas_periodo) {
			Intent intent = new Intent(WorkDayActivity.this, SalesPeriodActivity.class);
			intent.putExtras(bun);
			startActivity(intent);
			return true;
		}else if(id == R.id.cerrar_sesion){
			startActivity(new Intent(getBaseContext(), MainActivity.class)
            .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP));
			controladorUsuario.cerrarSesion(this);
			finish();
		}else if(id == R.id.sincronizar){
			Intent i = new Intent(WorkDayActivity.this, SyncActivity.class);
			bun.putString("SINCRONIZACION","GENERAL");
			i.putExtras(bun);
			startActivity(i);
		}
		return super.onOptionsItemSelected(item);
	}


}
