package com.gvs.controladores;

import java.util.Collection;
import java.util.Vector;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import com.gvs.entidades.NoAtendido;
import com.gvs.exceptiones.ExceptionNoAtendido;
import com.gvs.utilidades.BaseDeDatos;
import com.gvs.utilidades.Funciones;



public class ControladorNoAtendido {
	private Context conte;
	private Funciones funcion = new Funciones();
	
	public ControladorNoAtendido(Context cont){
		conte=cont;
	}
	
	public void grabarNoAtendido(ContentValues conMotivo) throws ExceptionNoAtendido{

		try {
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql = "";
			Cursor cur;
			
			Sql = "SELECT * FROM NOATENDIDOS WHERE CODIGOCLIENTE=" + conMotivo.getAsInteger("CODIGOCLIENTE") + " AND FECHA=" + conMotivo.getAsLong("FECHA");
			cur = db.rawQuery(Sql, null);
			if (cur.moveToNext()) {
				db.update("NOATENDIDOS", conMotivo, "CODIGOCLIENTE=" + conMotivo.getAsInteger("CODIGOCLIENTE") + " AND FECHA=" + conMotivo.getAsLong("FECHA"), null);
			} else {
				db.insert("NOATENDIDOS", null, conMotivo);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
			throw new ExceptionNoAtendido(ex.getMessage());
		}
	}
	
	public boolean marcarParaEnviar() throws ExceptionNoAtendido{
		try {
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql=""; 
			Sql = "UPDATE NOATENDIDOS SET ESTADO=11 WHERE ESTADO=0";
			db.execSQL(Sql);
			return true;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new ExceptionNoAtendido("ERROR:Al intentar marcar el no atendidos para ser enviados. " +
					"Pongase en contacto con la mesa de ayuda. Error: " + e.getMessage());
		}
	}
	
	public Collection<NoAtendido> buscarNoAtendidosParaEnviar() throws ExceptionNoAtendido{
		try {
			Vector<NoAtendido> noAtendidos = new Vector<NoAtendido>();
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql = "SELECT * FROM NOATENDIDOS WHERE ESTADO=11";
			Cursor cur = db.rawQuery(Sql, null);
			if (cur.getColumnCount()>0){
				while (cur.moveToNext()){
					NoAtendido noAtendido = new NoAtendido();
					noAtendido.setFecha(cur.getLong(cur.getColumnIndex("FECHA")));
					noAtendido.setCodigoVendedor(cur.getInt(cur.getColumnIndex("CODIGOVENDEDOR")));
					noAtendido.setCodigoCliente(cur.getInt(cur.getColumnIndex("CODIGOCLIENTE")));
					noAtendido.setCodigoMotivo(cur.getInt(cur.getColumnIndex("CODIGOMOTIVO")));
					noAtendido.setLatitud(cur.getDouble(cur.getColumnIndex("LATITUD")));
					noAtendido.setLongitud(cur.getDouble(cur.getColumnIndex("LONGITUD")));
					noAtendido.setPresicion(cur.getDouble(cur.getColumnIndex("PRECISION")));
					noAtendido.setProveedor(cur.getString(cur.getColumnIndex("PROVEE")));
					noAtendidos.add(noAtendido);
				}
			}
			return noAtendidos;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new ExceptionNoAtendido(e.getMessage());
		}
		
	}
}
