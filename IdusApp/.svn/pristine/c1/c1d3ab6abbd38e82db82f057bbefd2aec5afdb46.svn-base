package com.gvs.controladores;

import java.util.Collection;
import java.util.Vector;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import com.gvs.entidades.RespuestaEncuestas;
import com.gvs.exceptiones.ExceptionEncuesta;
import com.gvs.utilidades.BaseDeDatos;
import com.gvs.utilidades.Funciones;

public class ControladorEncuesta {
	private Context conte;
	private Funciones funcion = new Funciones();
	
	public ControladorEncuesta(Context cont) {
		conte=cont;
	}
	
	public void grabarEncuesta(ContentValues conEncuesta,ContentValues conEncuestaItem) throws ExceptionEncuesta{
		try {
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql = "";
			Cursor cur;
			
			Sql = "SELECT * FROM TOMAENCUESTACABECERA WHERE NUMERO='" + conEncuesta.getAsString("NUMERO") + "' AND NUMEROENCUESTA="+Integer.parseInt(conEncuesta.getAsString("NUMEROENCUESTA"));
			cur = db.rawQuery(Sql, null);
			if (cur.moveToNext()==false) {				
				db.insert("TOMAENCUESTACABECERA", null, conEncuesta);
			}else{
			//	db.update("TOMAENCUESTACABECERA", conEncuesta,"NUMERO='" + conEncuesta.getAsString("NUMERO")+"'", null);
			}
			cur.close();
			Sql = "SELECT * FROM TOMAENCUESTACUERPO WHERE NUMERO='" + conEncuestaItem.getAsString("NUMERO") + "' AND ITEM=" + conEncuestaItem.getAsInteger("ITEM");
			cur = db.rawQuery(Sql, null);
			if (cur.moveToNext()==false) {
				db.insert("TOMAENCUESTACUERPO", null, conEncuestaItem);
			}
			cur.close();
		} catch (Exception ex) {
			ex.printStackTrace();
			throw new ExceptionEncuesta(ex.getMessage());
		}
	}	
	
	public boolean marcarParaEnviar() throws ExceptionEncuesta{
		try {
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql=""; 
			Sql = "UPDATE TOMAENCUESTACABECERA SET ESTADO=11 WHERE ESTADO=0";
			db.execSQL(Sql);
			return true;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new ExceptionEncuesta("ERROR:Al intentar marcar el no atendidos para ser enviados. " +
					"Pongase en contacto con la mesa de ayuda. Error: " + e.getMessage());
		}
	}	

	public Collection<RespuestaEncuestas> buscarRespuestasParaEnviar() throws ExceptionEncuesta{
		try {
			Vector<RespuestaEncuestas> respuestas = new Vector<RespuestaEncuestas>();
			BaseDeDatos baseDeDatos = new BaseDeDatos(conte, funcion.BaseDeDatos(), null, funcion.Version());
			SQLiteDatabase db = baseDeDatos.getReadableDatabase();
			String Sql = "SELECT * FROM TOMAENCUESTACABECERA WHERE ESTADO=11";
			Cursor cur = db.rawQuery(Sql, null);
			if (cur.getColumnCount()>0){
				while (cur.moveToNext()){
					RespuestaEncuestas resp = new RespuestaEncuestas();
					resp.setIdAidus(cur.getString(cur.getColumnIndex("NUMERO")));
					resp.setNumero(cur.getInt(cur.getColumnIndex("NUMEROENCUESTA")));
					resp.setCodigoCliente(cur.getInt(cur.getColumnIndex("CODIGOCLIENTE")));
					resp.setFecha(cur.getLong(cur.getColumnIndex("FECHA")));
					resp.setObservacion(cur.getString(cur.getColumnIndex("OBSERVACION")));
					resp.setLatitud(cur.getString(cur.getColumnIndex("LATITUD")));
					resp.setLongitud(cur.getString(cur.getColumnIndex("LONGITUD")));
					resp.setPrecis(cur.getString(cur.getColumnIndex("PRECISION")));
					resp.setProvee(cur.getString(cur.getColumnIndex("PROVEE")));
					Sql = "SELECT ITEM,RESPUESTA FROM TOMAENCUESTACUERPO WHERE NUMERO='" + resp.getIdAidus() + "'";
					Cursor cur01 = db.rawQuery(Sql, null);
					if (cur01.getColumnCount()>0) {
						String respItem="";
						while (cur01.moveToNext()) {
							if (respItem.equals("")) {
								respItem=cur01.getInt(cur01.getColumnIndex("ITEM")) + ";"+ cur01.getInt(cur01.getColumnIndex("RESPUESTA")); 
							} else {
								respItem=respItem + "~" +cur01.getInt(cur01.getColumnIndex("ITEM")) + ";"+ cur01.getInt(cur01.getColumnIndex("RESPUESTA"));
							}
						}
						resp.setRespuestas(respItem);
					}					
					respuestas.add(resp);
				}
			}
			return respuestas;
		} catch (Exception ex) {
			ex.printStackTrace();
			throw new ExceptionEncuesta(ex.getMessage());
		}
	}
}
