package com.gvs.idusapp;

import com.gvs.busquedas.BusquedasCierreDeDia;
import com.gvs.controladores.ControladorVendedor;
import com.gvs.utilidades.Funciones;
import android.content.Context;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class ResumeActivity extends Fragment{
	private Button btn_cliente;
	private TextView lbl_programadas, lbl_fuera_ruta, lbl_efectivas,
			lbl_no_efectivas, lbl_realizadas, lbl_drop_size, lbl_pedidos,
			lbl_pedido_fuera_ruta, lbl_ruta_actual, lbl_ruta_objetivo,
			lbl_visita_actual, lbl_visita_objetivo, lbl_gps, lbl_latitud,
			lbl_longitud;
	private Bundle bun;
	private int empresa, vendedor, dia;
	private ControladorVendedor controladorVendedor;
	private Funciones funcion;
	private LocationManager locManager;
	private LocationListener locLis;
		
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		View V = inflater.inflate(R.layout.activity_resume, container, false);
		setHasOptionsMenu(true);
		return V;
	}
	
	@Override
	public void onActivityCreated(Bundle state) {
		super.onActivityCreated(state);
		lbl_programadas = (TextView) getActivity().findViewById(R.id.lbl_programadas);
		lbl_fuera_ruta = (TextView) getActivity().findViewById(R.id.lbl_fuera_ruta);
		lbl_efectivas = (TextView) getActivity().findViewById(R.id.lbl_efectivas);
		lbl_no_efectivas = (TextView) getActivity().findViewById(R.id.lbl_no_efectivas);
		lbl_realizadas = (TextView) getActivity().findViewById(R.id.lbl_realizadas);
		lbl_drop_size = (TextView) getActivity().findViewById(R.id.lbl_drop_size);
		lbl_pedidos = (TextView) getActivity().findViewById(R.id.lbl_pedidos);
		lbl_pedido_fuera_ruta = (TextView) getActivity().findViewById(R.id.lbl_pedido_fuera_ruta);
		lbl_ruta_actual = (TextView) getActivity().findViewById(R.id.lbl_ruta_actual);
		lbl_ruta_objetivo = (TextView) getActivity().findViewById(R.id.lbl_ruta_objetivo);
		lbl_visita_actual = (TextView) getActivity().findViewById(R.id.lbl_visita_actual);
		lbl_visita_objetivo = (TextView) getActivity().findViewById(R.id.lbl_visita_objetivo);
		lbl_gps = (TextView) getActivity().findViewById(R.id.lbl_gps);
		lbl_latitud = (TextView) getActivity().findViewById(R.id.lbl_latitud);
		lbl_longitud = (TextView) getActivity().findViewById(R.id.lbl_longitud);
	
		bun = getActivity().getIntent().getExtras();
		controladorVendedor = new ControladorVendedor(getActivity());
		funcion = new Funciones();
		vendedor = bun.getInt("VENDEDOR");
		empresa = bun.getInt("EMPRESA");
		dia = bun.getInt("DIA");
		String respuesta = controladorVendedor.buscarObjetivoVendedor(empresa,vendedor);
		if (respuesta.equals("sd") == false) {
			String tex[];
			tex = respuesta.split("~");
			lbl_ruta_objetivo.setText(tex[0]);
			lbl_visita_objetivo.setText(tex[1]);
		}
		cargarDatos(empresa, vendedor, getActivity(), dia);
		btn_cliente = (Button) getActivity().findViewById(R.id.btn_clientes);
		btn_cliente.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(getActivity(), ClientActivity.class);
				intent.putExtras(bun);
				startActivity(intent);
			}
		});
	}
	
	@Override
	public void onResume() {
		bun = getActivity().getIntent().getExtras();
		controladorVendedor = new ControladorVendedor(getActivity());
		funcion = new Funciones();
		vendedor = bun.getInt("VENDEDOR");
		empresa = bun.getInt("EMPRESA");
		dia = bun.getInt("DIA");
		String respuesta = controladorVendedor.buscarObjetivoVendedor(empresa,vendedor);
		if (respuesta.equals("sd") == false) {
			String tex[];
			tex = respuesta.split("~");
			lbl_ruta_objetivo.setText(tex[0]);
			lbl_visita_objetivo.setText(tex[1]);
		}
		cargarDatos(empresa, vendedor, getActivity(), dia);
		btn_cliente = (Button) getView().findViewById(R.id.btn_clientes);
		btn_cliente.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(getActivity(), ClientActivity.class);
				intent.putExtras(bun);
				startActivity(intent);
			}
		});
		super.onResume();
	}
	
	private void cargarDatos(int empresa, int vendedor, Context cont, int dia) {
		try {
		BusquedasCierreDeDia cieDia = new BusquedasCierreDeDia(cont, empresa,vendedor);
			int cantCliDia = cieDia.devolverCantidadClientesDelDia(dia,vendedor);
			int cantVEfect = cieDia.devolverCantidadVendidos(dia);
			int cantVEfectFR = cieDia.devolverCantidadVendidosFR(dia);
			int cantVnEfec = cieDia.devolverCantidadNoVendidos(dia);
			int totalVista = cantVEfect + cantVnEfec;
			double importePedido = cieDia.devolverImportePedido(dia);
			double importePedidoFR = cieDia.devolverImportePedidoFR(dia);

			lbl_programadas.setText(String.valueOf(cantCliDia));
			lbl_efectivas.setText(String.valueOf(cantVEfect));
			lbl_no_efectivas.setText(String.valueOf(cantVnEfec));
			lbl_realizadas.setText(String.valueOf(totalVista));
			lbl_pedidos.setText(String.valueOf(funcion.formatDecimal(importePedido, 2)));
			lbl_fuera_ruta.setText(String.valueOf(cantVEfectFR));
			lbl_pedido_fuera_ruta.setText(String.valueOf(funcion.formatDecimal(importePedidoFR, 2)));

			if (cantCliDia > 0 && cantVEfect > 0) {
				double efectividadRuta = ((cantVEfect * 100) / cantCliDia);
				double efectividadVist = ((cantVEfect * 100) / totalVista);
				double dropSize = (importePedido / cantCliDia);

				lbl_ruta_actual.setText(String.valueOf(funcion.formatDecimal(efectividadRuta, 2)));
				lbl_visita_actual.setText(String.valueOf(funcion.formatDecimal(efectividadVist, 2)));
				lbl_drop_size.setText(String.valueOf(funcion.formatDecimal(dropSize, 2)));
			}
			comenzarLocalizacion();
		} catch (Exception e) {
			
		}

	}
	
	private void comenzarLocalizacion() {
		

		locLis = new LocationListener() {

			@Override
			public void onStatusChanged(String provider, int status,Bundle extras) {
				lbl_gps.setText(provider);
			}

			@Override
			public void onProviderEnabled(String provider) {
				// TODO Auto-generated method stub
			}

			@Override
			public void onProviderDisabled(String provider) {
				// TODO Auto-generated method stub
			}

			@Override
			public void onLocationChanged(Location location) {
				// TODO Auto-generated method stub
				lbl_latitud.setText(String.valueOf(location.getLatitude()));
				lbl_longitud.setText(String.valueOf(location.getLongitude()));
				// precision=location.getAccuracy();
				// proveedor=location.getProvider();
			}

		};

		try {
			locManager = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);
			if (locManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
				locManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
				lbl_gps.setText("Si");
			} else {
				lbl_gps.setText("No");
				if (locManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) {
					locManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		if (locManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
			locManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,1000, 100, locLis);
		} else {
			if (locManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) {
				locManager.requestLocationUpdates(
														//milisegundo, metros de cambio
						LocationManager.NETWORK_PROVIDER, 1000, 100, locLis);
			}
		}

	}

}
